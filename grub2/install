#! /bin/bash

# Settings from /etc/sysconfig/filename are available as environment vars
# with the name 'SYS__FILENAME__KEY' (filename converted to upper case).
#
# Not all files are parsed, current list is:
#   bootloader, language
#

shopt -s extglob

function default_installdevice {
  default_device=

  while read x ; do
    # go for the device name
    [ "${x::5}" != "/dev/" ] && continue
    default_device=$x
    break
  done < <(df --local --output=source /boot/grub2/$target)

  [ -z "$default_device" ] && return
  x=${default_device%%*([0-9])}
  [ -b "$x" ] && default_device=$x
  [ -b "$default_device" ] || default_device=

  echo "default install device: $default_device"
}

function install {
  dev="$1"
  if [ -b "$dev" -o -f "$dev" ] ; then
    installed=1
    ( set -x ; /usr/sbin/grub2-install $trusted --target="$target" --force --skip-fs-probe "$dev" ) || err=1
  else
    echo "$dev: not a block device"
  fi
}

target=$(uname --hardware-platform)

if [ -z "$target" ] ; then
  echo "no target platform"
  exit 1
fi

case "$target" in
  i?86 | x86_64 ) target=i386-pc needs_installdevice=1 ;;
  ppc | ppc64* ) target=powerpc-ieee1275 needs_installdevice=1 ;;
  s390x ) target=s390x-emu ;;
esac

echo "target = $target"

# We install grub2 at the end of the installation, not within (bsc#979145)
if [ "$YAST_IS_RUNNING" = instsys ]; then
  echo "Skipping grub2 during installation. Will be done at the end"
  exit 0
fi

if [ "$target" = "powerpc-ieee1275" ] ; then
  grep -q PowerNV /proc/cpuinfo && exit 0
fi

if [ "$SYS__BOOTLOADER__TRUSTED_BOOT" = yes -a -d "/usr/lib/trustedgrub2/$target" ] ; then
  trusted="--directory=/usr/lib/trustedgrub2/$target"
fi

installed=0
err=0
if [ -x /usr/sbin/grub2-install ] ; then
  if [ "$needs_installdevice" = 1 ] ; then
    if [ -r /etc/default/grub_installdevice ] ; then
      while read device ; do
        # ignore everything that doesn't look like a path
        [ "${device::1}" != "/" ] && continue
        install "$device"
      done </etc/default/grub_installdevice
    else
      echo "/etc/default/grub_installdevice: permission denied"
    fi
    if [ "$installed" = 0 ] ; then
      default_installdevice
      install $default_device
      [ "$installed" = 1 ] || err=1
    fi
  else
    ( set -x ; /usr/sbin/grub2-install $trusted --target="$target" )
  fi
else
  echo "grub2-install: command not found"
  err=1
fi

exit $err
