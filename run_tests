#! /bin/bash

test_dir="tests"
test_root="$test_dir/root"
test_data="$test_dir/data"

programs="/usr/bin/bash /usr/bin/dash /usr/bin/busybox /usr/bin/true /usr/bin/uname"
busybox_programs="/usr/bin/sed /usr/bin/mktemp /usr/bin/tr /usr/bin/rm /usr/bin/df /usr/bin/ls"
dummy_programs="/usr/sbin/grub2-install /usr/sbin/grub2-mkconfig /usr/sbin/shim-install"

# notes
#
# - uname from busybox not compatible
#

opt_refs=

while true ; do
  case $1 in
    -r) opt_refs=".ref" ; shift ; continue ;;
  esac

  break
done

init_tests ()
{
  rm -rf "$test_root"

  mkdir -p "$test_root"/{tmp,boot,etc/sysconfig,dev,var/log,usr/bin/system,usr/lib/bootloader,usr/lib64,usr/sbin}

  for i in bin sbin lib lib64 ; do
    ln -s "usr/$i" "$test_root"
  done

  cp -r $test_data/* "$test_root"

  touch "$test_root/var/log/pbl.log"

  for p in $programs $busybox_programs ; do
    cp --parents "$p" $(ldd "$p" | sed -e '/\//! d; s/^.*[ \t]\(\/[^ ]\+\) .*$/\1/') "$test_root"
  done

  for p in $busybox_programs ; do
    mv "$test_root/$p" "$test_root/usr/bin/system"
  done

  for p in $dummy_programs ; do
    ln -s /usr/bin/true "$test_root/$p"
  done

  make install DESTDIR="$test_root"
}

done_tests ()
{
  rm -r "$test_root"

}

set_bash ()
{
  ln -sf "bash" "$test_root/usr/bin/sh"

  for p in $busybox_programs ; do
    ln -sf "system/${p##*/}" "$test_root/$p"
  done

  shell=bash
}

set_dash ()
{
  ln -sf "dash" "$test_root/usr/bin/sh"

  for p in $busybox_programs ; do
    ln -sf "system/${p##*/}" "$test_root/$p"
  done

  shell=dash
}

set_busybox ()
{
  ln -sf "busybox" "$test_root/usr/bin/sh"

  for p in $busybox_programs ; do
    ln -sf "busybox" "$test_root/$p"
  done

  shell=busybox
}

get_testdata ()
{
  t="$1"

  cp "$test_root/var/log/pbl.log" "$test_dir/$t/pbl.log$suffix"
  cp "$test_root/etc/sysconfig/bootloader" "$test_dir/$t/bootloader$suffix"
}

do_test ()
{
  t="$1"

  cp -r $test_data/* "$test_root"

  echo -n >"$test_root/var/log/pbl.log"

  if [ -n "$opt_refs" ] ; then
    suffix="$opt_refs"
  else
    suffix=".$shell"
  fi

  # mounting /proc or /dev needed?
  cat "$test_dir/$t/script" | unshare --pid --fork --user --map-root-user --root="$test_root" >"$test_dir/$t/output$suffix" 2>&1

  get_testdata "$t"
}

do_tests ()
{
  for t in $test_dir/????_* ; do
    do_test ${t##*/}
  done
}

show_results ()
{
  echo == $shell ==

  for t in $test_dir/????_* ; do
    n=${t##*/}
    printf "%-32s" "  $n"
    first=
    for i in $t/*.ref ; do
      [ -e "$i" ] || continue
      i="${i%.ref}"
      f=${i##*/}
      echo -n "$first$f "
      if cmp -s "$i.ref" "$i.$shell" ; then
        echo -en "\u2714"
      else
        test_error=1
        echo -en "\u2718"
      fi
      first=", "
    done
    echo
  done

}

init_tests

test_error=0

if [ -n "$opt_refs" ] ; then
  set_bash
  do_tests
else
  set_bash
  do_tests
  show_results

  set_dash
  do_tests
  show_results

  set_busybox
  do_tests
  show_results
fi

done_tests

exit "$test_error"
